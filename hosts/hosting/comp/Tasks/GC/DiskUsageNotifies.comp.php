<?php

#-------------------------------------------------------------------------------
/** @author Alex Keda, for www.host-food.ru */
/******************************************************************************/
/******************************************************************************/
$__args_list = Array('Params');
/******************************************************************************/
Eval(COMP_INIT);
/******************************************************************************/
/******************************************************************************/
if(Is_Error(System_Load('classes/Server.class.php')))
	return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$Settings = $Params['DiskUsageNotifiesSettings'];
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
if(!$Settings['IsActive'])
	return TRUE;
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$HostingServers = DB_Select('HostingServers',Array('ID','Address'));
#-------------------------------------------------------------------------------
switch(ValueOf($HostingServers)){
case 'error':
	return ERROR | @Trigger_Error(500);
case 'exception':
	# No more...
	break;
case 'array':
	#-------------------------------------------------------------------------------
	$Accounts = Array();
	#-------------------------------------------------------------------------------
	foreach($HostingServers as $HostingServer){
		#-------------------------------------------------------------------------
		$Server = new Server();
		#-------------------------------------------------------------------------
		$IsSelected = $Server->Select((integer)$HostingServer['ID']);
		#-------------------------------------------------------------------------
		switch(ValueOf($IsSelected)){
		case 'error':
			return ERROR | @Trigger_Error(500);
		case 'exception':
			return ERROR | @Trigger_Error(400);
		case 'true':
			break;
		default:
			return ERROR | @Trigger_Error(101);
		}
		#---------------------------------------------------------------------
		$iAccounts = $Server->GetDiskUsage();
		#---------------------------------------------------------------------
		switch(ValueOf($iAccounts)){
		case 'error':
			# No more...
		case 'exception':
			#-------------------------------------------------------------------------------
			# No more...
			break;
			#-------------------------------------------------------------------------------
		case 'array':
			#-------------------------------------------------------------------------------
			$Accounts = Array_Merge($Accounts,$iAccounts);
			#-------------------------------------------------------------------------------
			break;
			#-------------------------------------------------------------------------------
		default:
			return ERROR | @Trigger_Error(101);
		}
		#-------------------------------------------------------------------------------
#break 2;
	}
	#-------------------------------------------------------------------------------
	break;
	#-------------------------------------------------------------------------------
default:
	return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$Array = Array();
#-------------------------------------------------------------------------------
foreach(Array_Keys($Accounts) as $UserID)
	if(!$Accounts[$UserID]['Disabled'])
		$Array[] = SPrintF("'%s'",$UserID);
#-------------------------------------------------------------------------------
# вариант когда нету пользователей, по любым причинам
if(SizeOf($Array) == 0)
	return TRUE;
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$HostingOrders = DB_Select('HostingOrdersOwners',Array('ID','UserID','Login'),Array('Where'=>SPrintF('`Login` IN (%s)',Implode(',',$Array))));
#-------------------------------------------------------------------------------
switch(ValueOf($HostingOrders)){
case 'error':
	return ERROR | @Trigger_Error(500);
case 'exception':
	# No more...
	break;
case 'array':
	#-------------------------------------------------------------------------------
	foreach($HostingOrders as $Order){
		#-------------------------------------------------------------------------------
		# выбираем тех кто лимит иеет, в лимит укладывается
		if($Accounts[$Order['Login']]['Limit'] > 0 && $Accounts[$Order['Login']]['Limit'] >= $Accounts[$Order['Login']]['Used']){
			#-------------------------------------------------------------------------------
			if(Ceil(($Accounts[$Order['Login']]['Used']/$Accounts[$Order['Login']]['Limit'])*100) > 90){
				Debug(SPrintF('[comp/Tasks/GC/DiskUsageNotifies]: account %s used %s/%s',$Order['Login'],$Accounts[$Order['Login']]['Used'],$Accounts[$Order['Login']]['Limit']));
			}
		}
		#-------------------------------------------------------------------------------
		# выбираем с оверлимитом
		if($Accounts[$Order['Login']]['Limit'] > 0 && $Accounts[$Order['Login']]['Limit'] < $Accounts[$Order['Login']]['Used']){
			Debug(SPrintF('[comp/Tasks/GC/DiskUsageNotifies]: account %s overlimit, used %s/%s',$Order['Login'],$Accounts[$Order['Login']]['Used'],$Accounts[$Order['Login']]['Limit']));
		}
		#-------------------------------------------------------------------------------
		# без лимитов
		if($Accounts[$Order['Login']]['Limit'] < 0 ){
			#-------------------------------------------------------------------------------
			Debug(SPrintF('[comp/Tasks/GC/DiskUsageNotifies]: account %s does not have disk limit',$Order['Login']));
			#-------------------------------------------------------------------------------
			if($Settings['IsEventForNoLimits']){
				#-------------------------------------------------------------------------------
				$Event = Array(
						'UserID'        => $Order['UserID'],
						'PriorityID'    => 'Warning',
						'Text'          => SPrintF('Обнаружен заказ хостинга (%s) с отсутствующим лимитом на дисковое пространство',$Order['Login']),
						'IsReaded'      => FALSE
						);
				$Event = Comp_Load('Events/EventInsert',$Event);
				if(!$Event)
					return ERROR | @Trigger_Error(500);
				#-------------------------------------------------------------------------------
			}
			#-------------------------------------------------------------------------------
		}
	#-------------------------------------------------------------------------------
	}
	#-------------------------------------------------------------------------------
	break;
	#-------------------------------------------------------------------------------
default:
	return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
return TRUE;
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------



?>
