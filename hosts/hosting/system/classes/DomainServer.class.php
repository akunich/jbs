<?php
#-------------------------------------------------------------------------------
/** @author Великодный В.В. (Joonte Ltd.) */
#-------------------------------------------------------------------------------
class DomainServer{
# Тип регистратора
public $SystemID = 'Default';
# Параметры связи с регистратором
public $Settings = Array();
#-------------------------------------------------------------------------------
public function Select($ServerID){
	/******************************************************************************/
	$__args_types = Array('integer');
	#-------------------------------------------------------------------------------
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Debug('[system/classes/DomainServer.class.php]: function Select');
	#-------------------------------------------------------------------------------
	$Settings = DB_Select('Servers','*',Array('UNIQ','ID'=>$ServerID));
	#-------------------------------------------------------------------------------
	switch(ValueOf($Settings)){
	case 'error':
		return ERROR | @Trigger_Error('[DomainServer->Select]: не удалось выбрать регистратора');
	case 'exception':
		return new gException('REGISTRATOR_NOT_FOUND','Указаный регистратор не найден');
	case 'array':
		break;
	default:
		return ERROR | @Trigger_Error(101);
	}
	#-------------------------------------------------------------------------------
	$this->SystemID = $Settings['Params']['SystemID'];
	#-------------------------------------------------------------------------------
	$this->Settings = $Settings;
	#-------------------------------------------------------------------------------
	if(Is_Error(System_Load(SPrintF('libs/%s.php',$this->Settings['Params']['SystemID']))))
		return ERROR | @Trigger_Error(500);
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return TRUE;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function DomainRegister(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainRegister');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_Register',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainRegister]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function GetUploadID(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function GetUploadID');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_GetUploadID',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->GetUploadID]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function DomainProlong(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainProlong');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_Prolong',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainProlong]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function DomainNsChange(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainNsChange');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_Ns_Change',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainNsChange]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function CheckTask(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function CheckTask');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Check_Task',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->CheckTask]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function ContractRegister(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function ContractRegister');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Contract_Register',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->ContractRegister]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function GetContract(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function GetContract');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Get_Contract',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->GetContract]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function GetBalance(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-----------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function GetBalance');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Get_Balance',$this->SystemID);
	#-----------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-----------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->GetBalance]: не удалось вызвать целевую функцию');
	#-----------------------------------------------------------------------------
	return $Result;
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function IsAvailableDomain(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function IsAvailableDomain');
	#-----------------------------------------------------------------------------
	$Function = SPrintF('%s_Is_Available_Domain',$this->SystemID);
	#-----------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-----------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->IsAvailableDomain]: не удалось вызвать целевую функцию');
	#-----------------------------------------------------------------------------
	return $Result;
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function DomainTransfer(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainTransfer');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_Transfer',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainTransfer]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function DomainAccept(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainAccept');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_Accept',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainAccept]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function ChangeContactDetail(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function ChangeContactDetail');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Change_Contact_Detail',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->ChangeContactDetail]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
public function GetContactDetail(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function GetContactDetail');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Get_Contact_Detail',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->GetContactDetail]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
/* получение списка всех доменов на аккаунте */
public function GetListDomains(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function GetListDomains');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Get_List_Domains',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->GetListDomains]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
/* логин в панель управления регистратора */
public function Logon(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function Logon');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Logon',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->Logon]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
/* список цен на все домены у регистратора */
public function DomainPriceList(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainPriceList');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_PriceList',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainPriceList]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
}

#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
/* запрос цены на указнный домен у регистратора */
public function DomainGetPrice(){
	/******************************************************************************/
	$__args__ = Func_Get_Args(); Eval(FUNCTION_INIT);
	/******************************************************************************/
	Array_UnShift($__args__,$this->Settings);
	#-------------------------------------------------------------------------------
	Debug('[system/classes/DomainServer.class.php]: function DomainGetPrice');
	#-------------------------------------------------------------------------------
	$Function = SPrintF('%s_Domain_GetPrice',$this->SystemID);
	#-------------------------------------------------------------------------------
	if(!Function_Exists($Function))
		return new gException('FUNCTION_NOT_SUPPORTED',SPrintF('Функция (%s) не поддерживается API модулем',$Function));
	#-------------------------------------------------------------------------------
	$Result = Call_User_Func_Array($Function,$__args__);
	if(Is_Error($Result))
		return ERROR | @Trigger_Error('[DomainServer->DomainGetPrice]: не удалось вызвать целевую функцию');
	#-------------------------------------------------------------------------------
	return $Result;
	#-------------------------------------------------------------------------------
}


#-------------------------------------------------------------------------------
}
#-------------------------------------------------------------------------------
?>
