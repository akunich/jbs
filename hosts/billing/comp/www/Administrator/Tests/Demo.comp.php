<?php


#-------------------------------------------------------------------------------
/** @author Великодный В.В. (Joonte Ltd.) */
/******************************************************************************/
/******************************************************************************/
Eval(COMP_INIT);
/******************************************************************************/
/******************************************************************************/
if(Is_Error(System_Load('modules/Authorisation.mod','libs/Http.php')))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
Header('Content-type: text/plain; charset=utf-8');
#-------------------------------------------------------------------------------
$Settings = Array('Host'=>HOST_ID,'Address'=>HOST_ID);
#-------------------------------------------------------------------------------
$__ADMINISTRATOR = $__CLIENT = Array();
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Авторизация в системе в качестве администратора\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'Email'    => 'admin@company.com',
  'Password' => 'default'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/Logon',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__ADMINISTRATOR['SessionID'] = $Answer['SessionID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Регистрация профиля исполнителя юридического лица\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'   => $__ADMINISTRATOR['SessionID'],
  'TemplateID'  => 'Juridical',
  'CompanyForm' => 'ООО',
  'CompanyName' => 'Джунте',
  'Basis'       => 'Устава',
  'Ogrn'        => '',
  'Inn'         => '3702541260',
  'Kpp'         => '370201001',
  'Phone'       => '+7 4932 359934',
  'Fax'         => '+7 4932 359934',
  'Email'       => 'office@joonte.com',
  'SiteURL'     => 'http://www.joonte.com',
  'dPost'       => 'Director',
  'dSourname'   => 'Бреславский',
  'dName'       => 'Антон',
  'dLastname'   => 'Вадимович',
  'aSourname'   => 'Бреславский',
  'aName'       => 'Антон',
  'aLastname'   => 'Вадимович',
  'jCountry'    => 'RU',
  'jState'      => 'Ивановская',
  'jCity'       => 'Иваново',
  'jIndex'      => '153025',
  'jType'       => 'Street',
  'jAddress'    => 'Кохомское, д. 7, офис 52',
  'pCountry'    => 'RU',
  'pState'      => 'Ивановская',
  'pCity'       => 'Иваново',
  'pIndex'      => '153025',
  'pType'       => 'Street',
  'pAddress'    => 'Кохомское, д. 7, офис 52',
  'BankName'    => 'Филиал КБ "Легион" (ООО) в г. Иваново',
  'Bik'         => '042406791',
  'BankAccount' => '40702810000020000838',
  'Kor'         => '30101810700000000791'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/ProfileEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Регистрация профиля исполнителя индивидуального предпринимателя\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'    => $__ADMINISTRATOR['SessionID'],
  'TemplateID'   => 'Individual',
  'CompanyName'  => 'Ханаев Вадим Альбертович',
  'Inn'          => '540630314020',
  'Kpp'          => '632946014',
  'SvLine'       => '54',
  'SvNumber'     => '020283930',
  'SvDate'       => '12.03.2009',
  'dSourname'    => 'Ханаев',
  'dName'        => 'Вадим',
  'dLastname'    => 'Альбертович',
  'dBornDate'    => '18.03.1986',
  'dPasportLine' => '3422',
  'dPasportNum'  => '427789',
  'dPasportWhom' => 'УВД Центрального района, г.Новосибирска',
  'dPasportDate' => '01.06.2001',
  'Phone'        => '+7 383 2911771',
  'Fax'          => '+7 495 7558899',
  'Email'        => 'billing@park-web.ru',
  'SiteURL'      => 'http://www.super.com',
  'jCountry'     => 'RU',
  'jState'       => 'Новосибирская',
  'jIndex'       => '630005',
  'jCity'        => 'Новосибирск',
  'jAddress'     => 'Державина, д. 46, кв.100',
  'pCountry'     => 'RU',
  'pState'       => 'Новосибирская',
  'pIndex'       => '630005',
  'pCity'        => 'Новосибирск',
  'pAddress'     => 'Державина, д. 46, кв.100',
  'BankName'     => 'филиал Открытого акционерного общества "УРАЛСИБ" банк',
  'Bik'          => '045004725',
  'BankAccount'  => '40701256801130000100',
  'Kor'          => '30101810400000000725'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/ProfileEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление группы серверов\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'  => $__ADMINISTRATOR['SessionID'],
  'Name'       => 'ISPmanager',
  'FunctionID' => 'NotDefined',
  'Comment'    => 'Россия, Москва, датацентр "МногоБайт"'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/HostingServersGroupEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__ADMINISTRATOR['ServersGroupID'] = $Answer['ServersGroupID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление первого сервера\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__ADMINISTRATOR['SessionID'],
  'SystemID'       => 'IspManager',
  'ServersGroupID' => $__ADMINISTRATOR['ServersGroupID'],
  'IsDefault'      => 'yes',
  'Domain'         => 'srv01.joonte.com',
  'Prefix'         => 'c',
  'Address'        => 'srv01.joonte.com',
  'Port'           => 443,
  'Protocol'       => 'ssl',
  'Url'            => 'https://srv01.joonte.com/manager',
  'Login'          => 'root',
  'Password'       => 'SUPER',
  'IP'             => '77.220.178.160',
  'IPsPool'        => '77.220.178.160',
  'Ns1Name'        => 'ns1.joonte.com',
  'Ns2Name'        => 'ns2.joonte.com',
  'Services'       => "HTTP=80\nFTP=21",
  'Notice'         => 'Администратор: Великодный Виталий Викторович, vitaly@velikodny.ru',
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/HostingServerEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление второго сервера\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__ADMINISTRATOR['SessionID'],
  'SystemID'       => 'Cpanel',
  'ServersGroupID' => $__ADMINISTRATOR['ServersGroupID'],
  'IsDefault'      => 'no',
  'Domain'         => 'srv02.joonte.com',
  'Prefix'         => 'p',
  'Address'        => 'srv02.joonte.com',
  'Port'           => 2083,
  'Protocol'       => 'ssl',
  'Url'            => 'https://srv02.joonte.com/manager',
  'Login'          => 'root',
  'Password'       => 'SUPER',
  'IP'             => '77.220.179.128',
  'IPsPool'        => '77.220.179.128',
  'Ns1Name'        => 'ns1.joonte.com',
  'Ns2Name'        => 'ns2.joonte.com',
  'Services'       => "HTTP=80\nFTP=21",
  'Notice'         => 'Администратор: Великодный Виталий Викторович, vitaly@velikodny.ru',
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/HostingServerEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление тарифа [Визитка]\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__ADMINISTRATOR['SessionID'],
  'GroupID'        => 2000000,
  'UserID'         => 1,
  'Name'           => 'Визитка',
  'PackageID'      => 'visitka',
  'CostDay'        => 10,
  'CostMonth'      => 300,
  'ServersGroupID' => $__ADMINISTRATOR['ServersGroupID'],
  'IsActive'       => 'yes',
  'IsProlong'      => 'yes',
  'IsSchemeChange' => 'yes',
  'MinDaysPay'     => 30,
  'MaxDaysPay'     => 1460,
  'QuotaDisk'      => 500,
  'QuotaDomains'   => 1,
  'QuotaEmail'     => 1
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/HostingSchemeEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление тарифа [Имидж]\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__ADMINISTRATOR['SessionID'],
  'GroupID'        => 2000000,
  'UserID'         => 1,
  'Name'           => 'Имидж',
  'PackageID'      => 'imidge',
  'CostDay'        => 20,
  'CostMonth'      => 600,
  'ServersGroupID' => $__ADMINISTRATOR['ServersGroupID'],
  'IsActive'       => 'yes',
  'IsProlong'      => 'yes',
  'IsSchemeChange' => 'yes',
  'MinDaysPay'     => 30,
  'MaxDaysPay'     => 1460,
  'QuotaDisk'      => 1000,
  'QuotaDomains'   => 5,
  'QuotaEmail'     => 5
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/HostingSchemeEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
echo "Добавление регистратора WebNames\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'Name'      => 'Вебнаймс',
  'TypeID'    => 'WebNames',
  'Comment'   => 'Отличный регистратор',
  'Address'   => 'webnames.ru',
  'Port'      => 81,
  'Protocol'  => 'ssl',
  'Login'     => 'test',
  'Password'  => 'test',
  'Ns1Name'   => 'ns1.webnames.ru',
  'Ns2Name'   => 'ns2.webnames.ru'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/RegistratorEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
echo "Добавление регистратора NauNet\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'Name'      => 'Наунет',
  'TypeID'    => 'NauNet',
  'Comment'   => 'Замечательный регистратор',
  'Address'   => 'ssbase.naunet.ru',
  'Port'      => 443,
  'Protocol'  => 'ssl',
  'Login'     => 'lapshin',
  'Password'  => 'lapshin',
  'Ns1Name'   => 'ns1.naunet.ru',
  'Ns2Name'   => 'ns2.naunet.ru'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/RegistratorEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__ADMINISTRATOR['RegistratorID'] = $Answer['RegistratorID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
echo "Добавление регистратора RegRu\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'Name'      => 'Регру',
  'TypeID'    => 'RegRu',
  'Comment'   => 'Превосходный регистратор',
  'Address'   => 'www.reg.ru',
  'Port'      => 443,
  'Protocol'  => 'ssl',
  'Login'     => 'test',
  'Password'  => 'test',
  'Ns1Name'   => 'ns1.reg.ru',
  'Ns2Name'   => 'ns2.reg.ru'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/RegistratorEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
echo "Добавление регистратора RuCenter\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'Name'      => 'Руцентр',
  'TypeID'    => 'RuCenter',
  'Comment'   => 'Великолепный регистратор',
  'Address'   => 'www.nic.ru',
  'Port'      => 443,
  'Protocol'  => 'ssl',
  'Login'     => '370/NIC-REG/adm',
  'Password'  => 'dogovor',
  'Ns1Name'   => 'ns1.nic.ru',
  'Ns2Name'   => 'ns2.nic.ru'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/RegistratorEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
echo "Добавление регистратора MasterName\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'Name'      => 'Мастернайм',
  'TypeID'    => 'MasterName',
  'Comment'   => 'Непревзойденный регистратор',
  'Address'   => 'cp.mastername.ru',
  'Port'      => 443,
  'Protocol'  => 'ssl',
  'Login'     => 'test',
  'Password'  => 'test',
  'Ns1Name'   => 'ns1.nic.ru',
  'Ns2Name'   => 'ns2.nic.ru'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/RegistratorEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more,,,
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
echo "Добавление регистратора Started\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'Name'      => 'Стартед',
  'TypeID'    => 'Started',
  'Comment'   => 'Лучший регистратор',
  'Address'   => 'api.started.ru',
  'Port'      => 443,
  'Protocol'  => 'ssl',
  'Login'     => 'test',
  'Password'  => 'test',
  'Ns1Name'   => 'ns1.started.ru',
  'Ns2Name'   => 'ns2.started.ru'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/RegistratorEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more,,,
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление доменной зоны [ru]\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__ADMINISTRATOR['SessionID'],
  'GroupID'        => 2000000,
  'UserID'         => 1,
  'Name'           => 'ru',
  'IsActive'       => TRUE,
  'IsProlong'      => TRUE,
  'CostOrder'      => 120,
  'CostProlong'    => 100,
  'RegistratorID'  => $__ADMINISTRATOR['RegistratorID'],
  'MinOrderYears'  => 1,
  'MaxActionYears' => 1,
  'DaysToProlong'  => 30
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/DomainSchemeEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление доменной зоны [com]\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__ADMINISTRATOR['SessionID'],
  'GroupID'        => 2000000,
  'UserID'         => 1,
  'Name'           => 'com',
  'IsActive'       => TRUE,
  'IsProlong'      => TRUE,
  'CostOrder'      => 300,
  'CostProlong'    => 250,
  'RegistratorID'  => $__ADMINISTRATOR['RegistratorID'],
  'MinOrderYears'  => 1,
  'MaxActionYears' => 10,
  'DaysToProlong'  => 30
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/DomainSchemeEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Регистрация клиента [ivan@ivanov.ru]\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'Email'     => 'ivan@ivanov.ru',
  'Password'  => 'Default',
  'Name'      => 'Иван Иванов'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/UserRegister',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__CLIENT['ContractID'] = $Answer['ContractID'];
    $__CLIENT['SessionID']  = $Answer['SessionID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Поиск тарифного плана на хостинг\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'    => $__ADMINISTRATOR['SessionID'],
  'TableID'      => 'HostingSchemes',
  'Conditions[]' => 'Name=Визитка',
  'ColumnsIDs[]' => 'ID'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/SelectDB',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Empty':
    return 'Тарифный план не найден';
  case 'Ok':
    #---------------------------------------------------------------------------
    $Row = Current($Answer['Rows']);
    #---------------------------------------------------------------------------
    $__CLIENT['HostingSchemeID'] = $Row['ID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Поиск тарифного плана на домен\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'    => $__ADMINISTRATOR['SessionID'],
  'TableID'      => 'DomainsSchemes',
  'Conditions[]' => 'Name=ru',
  'ColumnsIDs[]' => 'ID'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/Administrator/API/SelectDB',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Empty':
    return 'Тарифный план не найден';
  case 'Ok':
    #---------------------------------------------------------------------------
    $Row = Current($Answer['Rows']);
    #---------------------------------------------------------------------------
    $__CLIENT['DomainSchemeID'] = $Row['ID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Формирование заявки на заказ хостинга\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'       => $__CLIENT['SessionID'],
  'ContractID'      => $__CLIENT['ContractID'],
  'Domain'          => 'mysypernewdomain.ru',
  'HostingSchemeID' => $__CLIENT['HostingSchemeID'],
  'DomainTypeID'    => 'Order',
  'DomainName'      => 'mysypernewdomain',
  'DomainSchemeID'  => $__CLIENT['DomainSchemeID']
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/HostingOrder',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__CLIENT['HostingOrderID'] = $Answer['HostingOrderID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Выбор периода заявки на заказ хостинга\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'      => $__CLIENT['SessionID'],
  'HostingOrderID' => $__CLIENT['HostingOrderID'],
  'DaysPay'        => 365
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/HostingOrderPay',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'UseBasket':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Регистрация профиля клиента физического лица\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'   => $__CLIENT['SessionID'],
  'TemplateID'  => 'Natural',
  'Sourname'    => 'Иванов',
  'Name'        => 'Петр',
  'Lastname'    => 'Викторович',
  'BornDate'    => '18.03.1986',
  'Phone'       => '+7 495 7558899',
  'Fax'         => '+7 495 7558899',
  'Email'       => 'alexander@yandex.ru',
  'PasportLine' => '3422',
  'PasportNum'  => '427789',
  'PasportWhom' => '15 отделением милиции г. Москвы',
  'PasportDate' => '01.06.2001',
  'pCountry'    => 'RU',
  'pState'      => 'Московская',
  'pCity'       => 'Москва',
  'pIndex'      => '101000',
  'pType'       => 'Street',
  'pAddress'    => 'Ленина, д. 51, кв. 7',
  'pRecipient'  => 'Иванову Петру Викторовичу'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/ProfileEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__CLIENT['ProfileID'] = $Answer['ProfileID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Регистрация профиля клиента юридического лица\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'   => $__CLIENT['SessionID'],
  'TemplateID'  => 'Juridical',
  'CompanyForm' => 'ООО',
  'CompanyName' => 'Ромашка',
  'Basis'       => 'Устава',
  'Ogrn'        => '1704101359',
  'Inn'         => '7701107259',
  'Kpp'         => '632946014',
  'Phone'       => '+7 495 7558899',
  'Fax'         => '+7 495 7558899',
  'Email'       => 'alexander@yandex.ru',
  'SiteURL'     => 'http://www.super.com',
  'dPost'       => 'Director',
  'dSourname'   => 'Иванов',
  'dName'       => 'Петр',
  'dLastname'   => 'Викторович',
  'aSourname'   => 'Иванов',
  'aName'       => 'Петр',
  'aLastname'   => 'Викторович',
  'jCountry'    => 'RU',
  'jState'      => 'Московская',
  'jCity'       => 'Москва',
  'jIndex'      => '101000',
  'jType'       => 'Street',
  'jAddress'    => 'Ленина, д. 51, кв. 7',
  'pCountry'    => 'RU',
  'pState'      => 'Московская',
  'pCity'       => 'Москва',
  'pIndex'      => '101000',
  'pType'       => 'Street',
  'pAddress'    => 'Ленина, д. 51, кв. 7',
  'BankName'    => 'ООО "КБ Легион"',
  'Bik'         => '544959119',
  'BankAccount' => '40701256800030000589',
  'Kor'         => '30101810500000000444'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/ProfileEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Регистрация профиля клиента индивидуального предпринимателя\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'    => $__CLIENT['SessionID'],
  'TemplateID'   => 'Individual',
  'CompanyName'  => 'Иванов Иван Иванович',
  'Inn'          => '770110725987',
  'Kpp'          => '632946014',
  'SvLine'       => '37',
  'SvNumber'     => '020283930',
  'SvDate'       => '12.03.2009',
  'dSourname'    => 'Иванов',
  'dName'        => 'Петр',
  'dLastname'    => 'Викторович',
  'dBornDate'    => '18.03.1986',
  'dPasportLine' => '3422',
  'dPasportNum'  => '427789',
  'dPasportWhom' => '15 отделением милиции г. Москвы',
  'dPasportDate' => '01.06.2001',
  'Phone'        => '+7 495 7558899',
  'Fax'          => '+7 495 7558899',
  'Email'        => 'alexander@yandex.ru',
  'SiteURL'      => 'http://www.super.com',
  'jCountry'     => 'RU',
  'jState'       => 'Московская',
  'jIndex'       => '101000',
  'jCity'        => 'Москва',
  'jAddress'     => 'Ленина, д. 51, кв. 7',
  'pCountry'     => 'RU',
  'pState'       => 'Московская',
  'pIndex'       => '101000',
  'pCity'        => 'Москва',
  'pAddress'     => 'Ленина, д. 51, кв. 7',
  'BankName'     => 'ООО "КБ Легион"',
  'Bik'          => '544959119',
  'BankAccount'  => '40701256800030000589',
  'Kor'          => '30101810500000000444'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/ProfileEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Формирование договора клиента\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__CLIENT['SessionID'],
  'TypeID'    => 'Natural',
  'ProfileID' => $__CLIENT['ProfileID']
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/ContractMake',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Формирование счета на оплату услуг\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'       => $__CLIENT['SessionID'],
  'ContractID'      => $__CLIENT['ContractID'],
  'PaymentSystemID' => 'WebMoneyZ'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/InvoiceMake',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    $__CLIENT['InvoiceID'] = $Answer['InvoiceID'];
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Установка счета в состояние [Условно оплачен]\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID' => $__ADMINISTRATOR['SessionID'],
  'ModeID'    => 'Invoices',
  'StatusID'  => 'Conditionally',
  'RowsIDs'   => $__CLIENT['InvoiceID']
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/StatusSet',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
echo "Добавление запроса в центр поддержки\n";
#-------------------------------------------------------------------------------
$Args = Array(
  #-----------------------------------------------------------------------------
  'SessionID'     => $__CLIENT['SessionID'],
  'Theme'         => 'Регистрация домена',
  'TargetGroupID' => 3100000,
  'PriorityID'    => 'Low',
  'Message'       => 'В течение какого периода мой домен будет доступен? Спасибо ;-)'
);
#-------------------------------------------------------------------------------
$Answer = Http_Send('/API/TicketEdit',$Settings,$Args);
if(Is_Error($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
$Answer = @JSON_Decode($Answer['Body'],TRUE);
if(!Is_Array($Answer))
  return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
switch($Answer['Status']){
  case 'Error':
    #---------------------------------------------------------------------------
    $Error = $Answer['Error'];
    #---------------------------------------------------------------------------
    return $Error['String'];
  case 'Exception':
    #---------------------------------------------------------------------------
    $Exception = $Answer['Exception'];
    #---------------------------------------------------------------------------
    return $Exception['String'];
  case 'Ok':
    # No more...
  break;
  default:
    return ERROR | @Trigger_Error(101);
}
#-------------------------------------------------------------------------------
echo "OK\n";
#-------------------------------------------------------------------------------

?>
