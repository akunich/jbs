<?php

#-------------------------------------------------------------------------------
/** @author Rootden, for Lowhosting.ru */
/******************************************************************************/
/******************************************************************************/
Eval(COMP_INIT);
/******************************************************************************/
/******************************************************************************/
$Args = Args();
$Config = Config();
#-------------------------------------------------------------------------------
if (!Isset($Config['SMSGateway']['SMSInterval'])) {
    return ERROR | @Trigger_Error(500);
}
$Interval = $Config['SMSGateway']['SMSInterval'];
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$Mobile = (string) @$Args['Mobile'];
$Confirm = (string) @$Args['Confirm'];
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
$CacheID = Md5($__FILE__.$GLOBALS['__USER']['ID']);
$CacheID2 = Md5('mobileconfirmlimit'.$GLOBALS['__USER']['ID']);
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
if ($Mobile) {
    #---------------------------------------------------------------------------
    $Mobile = $GLOBALS['__USER']['Mobile'];
    #---------------------------------------------------------------------------
    if (Is_Error(System_Load('modules/Authorisation.mod')))
	return ERROR | @Trigger_Error(500);
    #---------------------------------------------------------------------------
    // Защита от агрессивно настроенных
    $Result2 = CacheManager::get($CacheID2);
    if ($Result2 == 'block') {
	if ($Interval >= 60) {
	    $Interval = ceil($Interval / 60).' мин';
	}
	else {
	    $Interval = $Interval.' сек';
	}
	return new gException('ERROR_SMS_SEND', "Вы уже отправили SMS сообщение с кодом подтверждения  Новое сообщение вы сможете отправить только через $Interval");
    }
    #-------------------------------------------------------------------------------
    $Executor = DB_Select('Users', Array('Sign', 'Mobile', 'GroupID'), Array('UNIQ', 'ID' => 100));
    if (!Is_Array($Executor))
	return ERROR | @Trigger_Error(500);
    #-------------------------------------------------------------------------------
    $Confirm = substr(md5($GLOBALS['__USER']['ID'].MicroTime()), 0, 5);
    CacheManager::add($CacheID, $Confirm, 10 * 24 * 3600);
    #-------------------------------------------------------------------------------
    $Message = "Ваш проверочный код: %s\r\n%s";
    $Comp = Comp_Load('Tasks/SMS', NULL, $Mobile, SPrintF($Message, $Confirm, $Executor['Sign']), $GLOBALS['__USER']['ID']);
    if ($Comp !== TRUE) {
	#-----------------------------------------------------------------------------
	if (is_string($Comp))
	    return new gException('ERROR_SMS_SEND', 'Не удалось отправить SMS сообщение c кодом подтверждения '.$Comp);
	return new gException('ERROR_SMS_SEND', 'Не удалось отправить SMS сообщение c кодом подтверждения');
	#-----------------------------------------------------------------------------
    }
    #-------------------------------------------------------------------------------
    #-------------------------------------------------------------------------------
    $IsUpdate = DB_Update('Users', Array('MobileConfirmed' => 0), Array('ID' => $GLOBALS['__USER']['ID']));
    if (Is_Error($IsUpdate))
	return ERROR | @Trigger_Error(500);
    #-------------------------------------------------------------------------------
    CacheManager::add($CacheID2, 'block', $Interval);
    return Array('Status' => 'Ok');
    #-------------------------------------------------------------------------------
}else {
    #-------------------------------------------------------------------------------
    if (Is_Error(System_Load('modules/Authorisation.mod')))
	return ERROR | @Trigger_Error(500);
    #-------------------------------------------------------------------------------
    if (empty($Confirm)) {
	return new gException('ERROR_CODE_EMPTY', 'Введите код подтверждения полученный по SMS');
    }
    #-------------------------------------------------------------------------------
    $Result = CacheManager::get($CacheID);
    if ($Confirm == $Result) {
	#-------------------------------------------------------------------------------
	$IsUpdate = DB_Update('Users', Array('MobileConfirmed' => Time()), Array('ID' => $GLOBALS['__USER']['ID']));
	if (Is_Error($IsUpdate))
	    return ERROR | @Trigger_Error(500);
	#-------------------------------------------------------------------------------
	// Отключаем все СМС уведомлепния в настройках
	$Notifies = $Config['Notifies'];
	foreach (Array_Keys($Notifies['Types']) as $TypeID) {
	    #---------------------------------------------------------------------------
	    $Where = SPrintF("`UserID` = %u AND `MethodID` = '%s' AND `TypeID` = '%s'", $GLOBALS['__USER']['ID'], 'SMS', $TypeID);
	    #-------------------------------------------------------------------------
	    $Count = DB_Count('Notifies', Array('Where' => $Where));
	    if (Is_Error($Count))
		return ERROR | @Trigger_Error(500);
	    #-------------------------------------------------------------------------
	    if (!$Count) {
		#-----------------------------------------------------------------------
		$INotify = Array(
		    #---------------------------------------------------------------------
		    'UserID' => $GLOBALS['__USER']['ID'],
		    'MethodID' => 'SMS',
		    'TypeID' => $TypeID
		);
		#-----------------------------------------------------------------------
		$IsInsert = DB_Insert('Notifies', $INotify);
		if (Is_Error($IsInsert))
		    return ERROR | @Trigger_Error(500);
	    }
	}
	#-------------------------------------------------------------------------------
	CacheManager::add($CacheID, '0');
	return Array('Status' => 'Ok');
	#-------------------------------------------------------------------------------
    }
    else {
	return new gException('BAD_COMFIRM_CODE', 'Введён неверный или просроченный код');
    }
    #-------------------------------------------------------------------------------
    return Array('Status' => 'Error');
}
?>
