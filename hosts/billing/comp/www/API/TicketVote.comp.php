<?php

#-------------------------------------------------------------------------------
/** @author Alex Keda, for www.host-food.ru */
/******************************************************************************/
/******************************************************************************/
Eval(COMP_INIT);
/******************************************************************************/
/******************************************************************************/
$Args = Args();
#-------------------------------------------------------------------------------
$MessageID	= (integer) @$Args['MessageID'];
$VoteBall	= (integer) @$Args['VoteBall'];
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
if(Is_Error(System_Load('modules/Authorisation.mod')))
	return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
Debug("[comp/www/API/TicketVote]: MessageID = " . $MessageID . "; VoteBall = " . $VoteBall);
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
# проверить имеет ли он право в этом тикете голосовать - не администратор ли
$IsPermission = Permission_Check('/Administrator/',(integer)$GLOBALS['__USER']['ID']);
#-----------------------------------------------------------------------------
switch(ValueOf($IsPermission)){
case 'error':
	return ERROR | @Trigger_Error(500);
case 'exception':
	return ERROR | @Trigger_Error(400);
case 'false':
	break;
case 'true':
	# сотрудники не могут голосовать...
	return new gException('PERSONAL_CANNOT_VOTE_1','Сотрудники не могут голосовать');
	break;
default:
	return ERROR | @Trigger_Error(101);
}
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# проверка, в свой ли тикет юзер голосует
$Where = '`ID`=(SELECT `EdeskID` FROM `EdesksMessagesOwners` WHERE `EdesksMessagesOwners`.`ID` = ' . $MessageID . ')';
$TicketOwnerID = DB_Select('Edesks',Array('UserID'),Array('UNIQ','Where'=>$Where));
#-----------------------------------------------------------------------------
switch(ValueOf($TicketOwnerID)){
case 'error':
	return ERROR | @Trigger_Error(500);
case 'exception':
	return ERROR | @Trigger_Error(400);
case 'array':
	if($TicketOwnerID['UserID'] != $GLOBALS['__USER']['ID'])
		return new gException('USER_VOTE_FOR_NOT_OWN_TICKET','Вы не можете оценивать чужие тикеты');
	break;
default:
	return ERROR | @Trigger_Error(101);
}
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# проверка что это не сотрудник под юзером трётся
if(IsSet($GLOBALS['__USER']['IsEmulate']))
	return new gException('PERSONAL_CANNOT_VOTE_2','Для возможности оценки тикетов, очистите список пользователей, в левом верхнем углу');
#-----------------------------------------------------------------------
#-------------------------------------------------------------------------------
# обновить строку в таблице
$IsUpdate = DB_Update('EdesksMessages',Array('VoteBall'=>$VoteBall),Array('ID'=>$MessageID));
if(Is_Error($IsUpdate))
	return ERROR | @Trigger_Error(500);
#-------------------------------------------------------------------------------
return Array('Status'=>'Ok');
#-------------------------------------------------------------------------------


?>
